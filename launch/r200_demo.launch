<!--
 * Launcher demo for hector_slam with Intel Realsense 200
-->
<launch>
  <!-- "camera" should uniquely identify the device. All topics are pushed down
       into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"                          default="camera"/>
  <arg name="publish_tf"                      default="false"/>
 
  <!-- Factory-calibrated depth registration -->
  <arg name="depth_registration"              default="false"/>
  <arg     if="$(arg depth_registration)" name="depth" value="depth_registered" />
  <arg unless="$(arg depth_registration)" name="depth" value="depth" />

  <!-- Processing Modules -->
  <arg name="rgb_processing"                  default="true"/>
  <arg name="ir_processing"                   default="true"/>
  <arg name="depth_processing"                default="true"/>
  <arg name="depth_registered_processing"     default="true"/>
  <arg name="disparity_processing"            default="true"/>
  <arg name="disparity_registered_processing" default="true"/>
  <arg name="scan_processing"                 default="true"/>

  <arg name="num_worker_threads" default="4" />
  <!-- Laserscan topic -->
  <arg name="scan_topic" default="scan"/>

  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0.0 0.0 0.0 0.0 0.0 0.0 /map /base_footprint 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_link" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_footprint /base_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="base_link_2_camera_link" args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /camera_link 10"/>
  <node pkg="tf" type="static_transform_publisher" name="camera_depeth_frame_2_nav" args="0.0 0.0 0.0 0.0 0.0 0.0 /camera_depth_optical_frame /nav 10"/>

  <include file="$(find hector_mapping)/launch/mapping_default.launch"/>
  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch"/>
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hector_slam_demos)/rviz/hector_slam_demos.rviz" />


  <!-- r200 and depthimage to laserscan -->
  <include file="$(find hector_slam_demos)/launch/includes/r200.launch.xml">
    <arg name="camera"                          value="$(arg camera)"/>
    <arg name="publish_tf"                      value="$(arg publish_tf)"/>
    <arg name="depth_registration"              value="$(arg depth_registration)"/>
    <arg name="num_worker_threads"              value="$(arg num_worker_threads)" />

    <!-- Processing Modules -->
    <arg name="rgb_processing"                  value="$(arg rgb_processing)"/>
    <arg name="ir_processing"                   value="$(arg ir_processing)"/>
    <arg name="depth_processing"                value="$(arg depth_processing)"/>
    <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)"/>
    <arg name="disparity_processing"            value="$(arg disparity_processing)"/>
    <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/> 
  </include>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg camera)/$(arg camera)_nodelet_manager">
    <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
         return the minimum value for those pixels centered vertically in the image. -->
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/$(arg camera)_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="$(arg camera)/$(arg depth)/image_raw"/>
    <remap from="scan" to="$(arg scan_topic)"/>

    <!-- Somehow topics here get prefixed by "$(arg camera)" when not inside an app namespace,
         so in this case "$(arg scan_topic)" must provide an absolute topic name (issue #88).
         Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
    <remap from="$(arg camera)/image" to="$(arg camera)/$(arg depth)/image_raw"/>
    <remap from="$(arg camera)/scan" to="$(arg scan_topic)"/>
  </node>

</launch>
